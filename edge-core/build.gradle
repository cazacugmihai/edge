buildscript {
  repositories {
    mavenCentral()
    mavenLocal()
  }

  dependencies {
    classpath "com.darylteo.vertx:vertx-gradle-plugin:0.1.0-SNAPSHOT"
    classpath "com.darylteo.gradle:codegen-plugin:0.1.0-SNAPSHOT"
  }
}

def testdir = file('testdir')
def apiProject = childProjects.'edge-core-api'
def langProjects = subprojects - apiProject

subprojects {
  repositories {
    mavenCentral()
    mavenLocal()
  }

  apply plugin: 'vertx'
  apply plugin: 'maven'

  version = '0.1.0-SNAPSHOT'

  vertx.platform.version '2.0.2-final'

  test.workingDir = testdir

  ext.release = !project.version.endsWith('-SNAPSHOT')

  task sourcesJar(type:Jar) {
    classifier = 'sources'
    from sourceSets.main.allJava
  }

  task javadocJar(type:Jar) {
    classifier = 'javadoc'
    from javadoc
  }

  artifacts {
    archives sourcesJar
    archives javadocJar
  }
}

configure(apiProject) {
  vertx {
    platform {
      groovy '2.0.0-final'
      scala '0.2.0'
    }
  }

  task('generateGroovy', type: com.darylteo.gradle.codegen.tasks.GenerateSources) {
    dependsOn classes
    classFiles(sourceSets.main)
  }
}

configure(langProjects) {
  def apiDir = "$buildDir/api"
  task getApi(type: Sync) {
    from apiProject.generateGroovy
    into file(apiDir)
  }

  sourceSets {
    main {
      compileClasspath += files(apiDir) { builtBy getApi }
    }
  }

  modZip { from apiDir }

  jar { from apiDir }

  artifacts { archives modZip }

  uploadArchives {
    repositories {
      mavenDeployer { configuration = configurations.archives }
    }
  }
}

task('install') { dependsOn subprojects*.install }