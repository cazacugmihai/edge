// All Projects Configuration - Repositories and Dependencies
allprojects {
  // Java Configuration
  apply plugin: 'java'
  apply plugin: 'eclipse'

  // Vertx Jars
  repositories {
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
    mavenCentral()
  }

  test {
    // Some vert.x properties
    systemProperties['vertx.test.timeout'] = 5
  }
}

project (':edge-core') {
  dependencies {
    testCompile "org.vert-x:vertx-testframework:$vertxVersion"
    testCompile project(':edge-promises')

    compile "org.vert-x:vertx-core:$vertxVersion"
    compile "org.slf4j:slf4j-simple:1.7.2"
  }
}

project(':edge-routematcher'){
  dependencies {
    compile project(':edge-core')
    compile "com.github.jknack:handlebars:$handlebarsVersion"
  }

  test {
    workingDir = "$buildDir/resources/test/"
  }
}

project(':edge-controllers'){
  dependencies {
    compile project(':edge-core')
    compile project(':edge-routematcher')
  }

  test {
    workingDir = "$buildDir/resources/test/"
  }
}

project(':edge-eventbus'){
  dependencies {
    compile project(':edge-core')
  }
}

project(':edge-promises'){
  dependencies {
    compile project(':edge-core')
    compile "com.netflix.rxjava:rxjava-core:0.5.0"
  }
}



// Root Project Configuration
apply plugin: 'eclipse'
apply plugin: 'idea'
jar.enabled = false

task dist(type: Zip, dependsOn:jar) {
  for (String b : subprojects.buildDir){
    from fileTree(dir: "$b/libs", include: '*.jar')
  }

  destinationDir = file("$rootProject.buildDir/dist")
  archiveName
}

// Wrapper Configuration
task wrapper(type: Wrapper) {
  gradleVersion = "$gradleVersion"
}